{
  "version": 3,
  "sources": ["../../delegate-it/delegate.js", "../../swup/src/helpers/classify.ts", "../../swup/src/helpers/getCurrentUrl.ts", "../../swup/src/helpers/createHistoryRecord.ts", "../../swup/src/helpers/updateHistoryRecord.ts", "../../swup/src/helpers/delegateEvent.ts", "../../swup/src/utils/index.ts", "../../swup/src/helpers/getDataFromHtml.ts", "../../swup/src/helpers/fetch.ts", "../../swup/src/helpers/Location.ts", "../../swup/src/helpers/markSwupElements.ts", "../../swup/src/helpers/cleanupAnimationClasses.ts", "../../swup/src/modules/Cache.ts", "../../swup/src/modules/enterPage.ts", "../../swup/src/modules/getAnchorElement.ts", "../../swup/src/modules/getAnimationPromises.ts", "../../swup/src/modules/getPageData.ts", "../../swup/src/modules/fetchPage.ts", "../../swup/src/modules/leavePage.ts", "../../swup/src/modules/loadPage.ts", "../../swup/src/modules/replaceContent.ts", "../../swup/src/modules/events.ts", "../../swup/src/modules/plugins.ts", "../../swup/src/modules/renderPage.ts", "../../swup/src/modules/transitions.ts", "../../swup/src/Swup.ts"],
  "sourcesContent": ["/** Keeps track of raw listeners added to the base elements to avoid duplication */\nconst ledger = new WeakMap();\nfunction editLedger(wanted, baseElement, callback, setup) {\n    if (!wanted && !ledger.has(baseElement)) {\n        return false;\n    }\n    const elementMap = ledger.get(baseElement)\n        ?? new WeakMap();\n    ledger.set(baseElement, elementMap);\n    const setups = elementMap.get(callback) ?? new Set();\n    elementMap.set(callback, setups);\n    const existed = setups.has(setup);\n    if (wanted) {\n        setups.add(setup);\n    }\n    else {\n        setups.delete(setup);\n    }\n    return existed && wanted;\n}\nfunction safeClosest(event, selector) {\n    let target = event.target;\n    if (target instanceof Text) {\n        target = target.parentElement;\n    }\n    if (target instanceof Element && event.currentTarget instanceof Element) {\n        // `.closest()` may match ancestors of `currentTarget` but we only need its children\n        const closest = target.closest(selector);\n        if (closest && event.currentTarget.contains(closest)) {\n            return closest;\n        }\n    }\n}\n// This type isn't exported as a declaration, so it needs to be duplicated above\nfunction delegate(selector, type, callback, options = {}) {\n    const { signal, base = document } = options;\n    if (signal?.aborted) {\n        return;\n    }\n    // Don't pass `once` to `addEventListener` because it needs to be handled in `delegate-it`\n    const { once, ...nativeListenerOptions } = options;\n    // `document` should never be the base, it's just an easy way to define \"global event listeners\"\n    const baseElement = base instanceof Document ? base.documentElement : base;\n    // Handle the regular Element usage\n    const capture = Boolean(typeof options === 'object' ? options.capture : options);\n    const listenerFn = (event) => {\n        const delegateTarget = safeClosest(event, selector);\n        if (delegateTarget) {\n            const delegateEvent = Object.assign(event, { delegateTarget });\n            callback.call(baseElement, delegateEvent);\n            if (once) {\n                baseElement.removeEventListener(type, listenerFn, nativeListenerOptions);\n                editLedger(false, baseElement, callback, setup);\n            }\n        }\n    };\n    const setup = JSON.stringify({ selector, type, capture });\n    const isAlreadyListening = editLedger(true, baseElement, callback, setup);\n    if (!isAlreadyListening) {\n        baseElement.addEventListener(type, listenerFn, nativeListenerOptions);\n    }\n    signal?.addEventListener('abort', () => {\n        editLedger(false, baseElement, callback, setup);\n    });\n}\nexport default delegate;\n", "export const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n", "export const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn location.pathname + location.search + (hash ? location.hash : '');\n};\n", "import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport const createHistoryRecord = (\n\turl: string,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst data = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.pushState(data, '', url);\n};\n", "import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport const updateHistoryRecord = (\n\turl: string | null = null,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst data = {\n\t\t...history.state,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.replaceState(data, '', url);\n};\n", "import delegate, { DelegateEventHandler, DelegateOptions, EventType } from 'delegate-it';\nimport { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type Unsubscribe = {\n\tdestroy: () => void;\n};\n\nexport const delegateEvent = <Selector extends string, TEvent extends EventType>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent]>,\n\toptions?: DelegateOptions\n): Unsubscribe => {\n\tconst controller = new AbortController();\n\tdelegate<string, ParseSelector<Selector, HTMLElement>, TEvent>(\n\t\tselector,\n\t\ttype,\n\t\tcallback,\n\t\toptions\n\t);\n\treturn { destroy: () => controller.abort() };\n};\n", "export const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\nexport const nextTick = (callback: () => void) => {\n\trequestAnimationFrame(() => {\n\t\trequestAnimationFrame(() => {\n\t\t\tcallback();\n\t\t});\n\t});\n};\n\nexport const escapeCssIdentifier = (ident: string) => {\n\t// @ts-ignore this is for support check, so it's correct that TS complains\n\tif (window.CSS && window.CSS.escape) {\n\t\treturn CSS.escape(ident);\n\t} else {\n\t\treturn ident;\n\t}\n};\n\n// Fix for Chrome below v61 formatting CSS floats with comma in some locales\nexport const toMs = (s: string) => {\n\treturn Number(s.slice(0, -1).replace(',', '.')) * 1000;\n};\n", "import { query, queryAll } from '../utils.js';\n\nexport type PageHtmlData = {\n\ttitle: string;\n\toriginalContent: string;\n\tblocks: string[];\n\tpageClass?: string;\n};\n\nexport const getDataFromHtml = (html: string, containers: string[]): PageHtmlData => {\n\tlet fakeDom = document.createElement('html');\n\tfakeDom.innerHTML = html;\n\tlet blocks: string[] = [];\n\n\tcontainers.forEach((selector) => {\n\t\tif (query(selector, fakeDom) == null) {\n\t\t\tconsole.warn(`[swup] Container ${selector} not found on page.`);\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif (queryAll(selector).length !== queryAll(selector, fakeDom).length) {\n\t\t\t\tconsole.warn(`[swup] Mismatched number of containers found on new page.`);\n\t\t\t}\n\t\t\tqueryAll(selector).forEach((item, index) => {\n\t\t\t\tqueryAll(selector, fakeDom)[index].setAttribute('data-swup', String(blocks.length));\n\t\t\t\tblocks.push(queryAll(selector, fakeDom)[index].outerHTML);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst title = query('title', fakeDom)?.innerText || '';\n\tconst pageClass = query('body', fakeDom)?.className;\n\n\t// to prevent memory leaks\n\tfakeDom.innerHTML = '';\n\t// @ts-ignore don't want to type it as possible null, since it's created at the top of the function always\n\tfakeDom = null;\n\n\treturn { title, pageClass, blocks, originalContent: html };\n};\n", "import { TransitionOptions } from '../modules/loadPage.js';\nimport { Options } from '../Swup.js';\n\nexport const fetch = (\n\toptions: TransitionOptions & { headers: Options['requestHeaders'] },\n\tcallback: (request: XMLHttpRequest) => void\n): XMLHttpRequest => {\n\tconst defaults = {\n\t\turl: window.location.pathname + window.location.search,\n\t\tmethod: 'GET',\n\t\tdata: null,\n\t\theaders: {}\n\t};\n\n\tconst { url, method, headers, data } = { ...defaults, ...options };\n\n\tconst request = new XMLHttpRequest();\n\n\trequest.onreadystatechange = function () {\n\t\tif (request.readyState === 4) {\n\t\t\t// if (request.status === 500) {} else {}\n\t\t\tcallback(request);\n\t\t}\n\t};\n\n\trequest.open(method, url, true);\n\tObject.entries(headers).forEach(([key, header]) => {\n\t\trequest.setRequestHeader(key, header);\n\t});\n\trequest.send(data);\n\n\treturn request;\n};\n", "/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\n\nexport class Location extends URL {\n\tconstructor(url: string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t}\n\n\tget url() {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param {Element} el\n\t * @return new Location instance\n\t */\n\tstatic fromElement(el: HTMLAnchorElement): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href');\n\t\treturn new Location(href!);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param {URL|string} url\n\t * @return new Location instance\n\t */\n\tstatic fromUrl(url: string): Location {\n\t\treturn new Location(url);\n\t}\n}\n", "import { query, queryAll } from '../utils.js';\n\nexport const markSwupElements = (element: Element, containers: string[]): void => {\n\tlet blocks = 0;\n\n\tcontainers.forEach((selector) => {\n\t\tif (query(selector, element) == null) {\n\t\t\tconsole.warn(`[swup] Container ${selector} not found on page.`);\n\t\t} else {\n\t\t\tqueryAll(selector).forEach((item: Element, index: number) => {\n\t\t\t\tqueryAll(selector, element)[index].setAttribute('data-swup', String(blocks));\n\t\t\t\tblocks++;\n\t\t\t});\n\t\t}\n\t});\n};\n", "export const isSwupClass = (className: string): boolean =>\n\t/^to-/.test(className) || ['is-changing', 'is-rendering', 'is-popstate'].includes(className);\n\nexport const cleanupAnimationClasses = (): void => {\n\tconst htmlClasses = document.documentElement.className.split(' ');\n\tconst removeClasses = htmlClasses.filter(isSwupClass);\n\tdocument.documentElement.classList.remove(...removeClasses);\n};\n", "import { getCurrentUrl, Location } from '../helpers.js';\nimport Swup from '../Swup.js';\nimport { PageData } from './getPageData.js';\n\nexport interface PageRecord extends PageData {\n\turl: string;\n\tresponseURL: string;\n}\nexport class Cache {\n\tpages: Record<string, PageRecord> = {};\n\tlast: PageRecord | null = null;\n\tswup: Swup;\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tgetCacheUrl(url: string): string {\n\t\treturn this.swup.resolveUrl(Location.fromUrl(url).url);\n\t}\n\n\tcacheUrl(page: PageRecord) {\n\t\tpage.url = this.getCacheUrl(page.url);\n\t\tif (page.url in this.pages === false) {\n\t\t\tthis.pages[page.url] = page;\n\t\t}\n\t\tpage.responseURL = this.getCacheUrl(page.responseURL);\n\t\tthis.last = this.pages[page.url];\n\t\tthis.swup.log(`Cache (${Object.keys(this.pages).length})`, this.pages);\n\t}\n\n\tgetPage(url: string): PageRecord {\n\t\turl = this.getCacheUrl(url);\n\t\treturn this.pages[url];\n\t}\n\n\tgetCurrentPage(): PageRecord {\n\t\treturn this.getPage(getCurrentUrl());\n\t}\n\n\texists(url: string): boolean {\n\t\turl = this.getCacheUrl(url);\n\t\treturn url in this.pages;\n\t}\n\n\tempty(): void {\n\t\tthis.pages = {};\n\t\tthis.last = null;\n\t\tthis.swup.log('Cache cleared');\n\t}\n\n\tremove(url: string): void {\n\t\tdelete this.pages[this.getCacheUrl(url)];\n\t}\n}\n", "import { nextTick } from '../utils.js';\nimport Swup from '../Swup.js';\nimport { PageRenderOptions } from './renderPage.js';\n\nexport const enterPage = function (this: Swup, { event, skipTransition }: PageRenderOptions = {}) {\n\tif (skipTransition) {\n\t\tthis.triggerEvent('transitionEnd', event);\n\t\tthis.cleanupAnimationClasses();\n\t\treturn [Promise.resolve()];\n\t}\n\n\tnextTick(() => {\n\t\tthis.triggerEvent('animationInStart');\n\t\tdocument.documentElement.classList.remove('is-animating');\n\t});\n\n\tconst animationPromises = this.getAnimationPromises('in');\n\tPromise.all(animationPromises).then(() => {\n\t\tthis.triggerEvent('animationInDone');\n\t\tthis.triggerEvent('transitionEnd', event);\n\t\tthis.cleanupAnimationClasses();\n\t});\n\treturn animationPromises;\n};\n", "import { escapeCssIdentifier as escape, query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n */\nexport const getAnchorElement = (hash: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\n\treturn (\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${escape(hash)}']`) ||\n\t\tquery(`a[name='${escape(decoded)}']`)\n\t);\n};\n", "import { queryAll, toMs } from '../utils.js';\nimport Swup from '../Swup.js';\n\n// Transition property/event sniffing\nlet transitionProp = 'transition';\nlet transitionEndEvent = 'transitionend';\nlet animationProp = 'animation';\nlet animationEndEvent = 'animationend';\n\nif (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {\n\ttransitionProp = 'WebkitTransition';\n\ttransitionEndEvent = 'webkitTransitionEnd';\n}\n\nif (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {\n\tanimationProp = 'WebkitAnimation';\n\tanimationEndEvent = 'webkitAnimationEnd';\n}\n\nexport function getAnimationPromises(\n\tthis: Swup,\n\t// we don't use this argument, but JS plugin depends on it with\n\t// its own version of getAnimationPromises, so it must be specified when\n\t// getAnimationPromises is being used\n\tanimationType: 'in' | 'out'\n): Promise<void>[] {\n\tconst selector = this.options.animationSelector;\n\n\t// Allow usage of swup without animations\n\tif (selector === false) {\n\t\t// Use array of a single resolved promise instead of an empty array to allow\n\t\t// possible future use with Promise.race() which requires an actual value\n\t\treturn [Promise.resolve()];\n\t}\n\n\tconst animatedElements = queryAll(selector, document.body);\n\n\t// Warn if no elements match the animationSelector, but keep things going\n\tif (!animatedElements.length) {\n\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\treturn [Promise.resolve()];\n\t}\n\n\tconst animationPromises = animatedElements\n\t\t.map((element) => getAnimationPromiseForElement(element))\n\t\t.filter(Boolean) as Promise<void>[];\n\n\tif (!animationPromises.length) {\n\t\tconsole.warn(\n\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t);\n\t\treturn [Promise.resolve()];\n\t}\n\n\treturn animationPromises;\n}\n\nconst isTransitionOrAnimationEvent = (event: any): event is TransitionEvent | AnimationEvent =>\n\t[transitionEndEvent, animationEndEvent].includes(event.type);\n\nfunction getAnimationPromiseForElement(element: Element): Promise<void> | undefined {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn undefined;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent = type === 'transition' ? transitionEndEvent : animationEndEvent;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd: EventListener = (event) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isTransitionOrAnimationEvent(event)) {\n\t\t\t\tthrow new Error('Not a transition or animation event.');\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nexport function getTransitionInfo(\n\telement: Element,\n\texpectedType: 'animation' | 'transition' | null = null\n) {\n\tconst styles = window.getComputedStyle(element);\n\n\t// not sure what to do about the below mess other than casting, but it's a mess\n\tconst transitionDelay = `${transitionProp}Delay` as keyof CSSStyleDeclaration;\n\tconst transitionDuration = `${transitionProp}Duration` as keyof CSSStyleDeclaration;\n\tconst animationDelay = `${animationProp}Delay` as keyof CSSStyleDeclaration;\n\tconst animationDuration = `${animationProp}Duration` as keyof CSSStyleDeclaration;\n\n\tconst transitionDelays = (\n\t\tstyles[transitionDelay] as CSSStyleDeclaration['transitionDelay']\n\t).split(', ');\n\tconst transitionDurations = (\n\t\t(styles[transitionDuration] || '') as CSSStyleDeclaration['transitionDuration']\n\t).split(', ');\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\n\tconst animationDelays = (\n\t\t(styles[animationDelay] || '') as CSSStyleDeclaration['animationDelay']\n\t).split(', ');\n\tconst animationDurations = (\n\t\t(styles[animationDuration] || '') as CSSStyleDeclaration['animationDuration']\n\t).split(', ');\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tlet type: string | null = '';\n\tlet timeout = 0;\n\tlet propCount = 0;\n\n\tif (expectedType === 'transition') {\n\t\tif (transitionTimeout > 0) {\n\t\t\ttype = 'transition';\n\t\t\ttimeout = transitionTimeout;\n\t\t\tpropCount = transitionDurations.length;\n\t\t}\n\t} else if (expectedType === 'animation') {\n\t\tif (animationTimeout > 0) {\n\t\t\ttype = 'animation';\n\t\t\ttimeout = animationTimeout;\n\t\t\tpropCount = animationDurations.length;\n\t\t}\n\t} else {\n\t\ttimeout = Math.max(transitionTimeout, animationTimeout);\n\t\ttype =\n\t\t\ttimeout > 0\n\t\t\t\t? transitionTimeout > animationTimeout\n\t\t\t\t\t? 'transition'\n\t\t\t\t\t: 'animation'\n\t\t\t\t: null;\n\t\tpropCount = type\n\t\t\t? type === 'transition'\n\t\t\t\t? transitionDurations.length\n\t\t\t\t: animationDurations.length\n\t\t\t: 0;\n\t}\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nfunction calculateTimeout(delays: string[], durations: string[]) {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n", "import { getDataFromHtml } from '../helpers.js';\nimport Swup from '../Swup.js';\nimport { PageHtmlData } from '../helpers/getDataFromHtml.js';\n\nexport type PageData = PageHtmlData & {\n\tresponseURL: string;\n};\nexport const getPageData = function (this: Swup, request: XMLHttpRequest): PageData | null {\n\t// this method can be replaced in case other content than html is expected to be received from server\n\t// this function should always return { title, pageClass, originalContent, blocks, responseURL }\n\t// in case page has invalid structure - return null\n\tconst html = request.responseText;\n\tconst pageHtmlData = getDataFromHtml(html, this.options.containers);\n\n\tif (!pageHtmlData) {\n\t\tconsole.warn('[swup] Received page is invalid.');\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t...pageHtmlData,\n\t\tresponseURL: request.responseURL || window.location.href\n\t};\n};\n", "import Swup from '../Swup.js';\nimport { fetch } from '../helpers.js';\nimport { TransitionOptions } from './loadPage.js';\nimport { PageRecord } from './Cache.js';\n\nexport function fetchPage(this: Swup, data: TransitionOptions): Promise<PageRecord> {\n\tconst headers = this.options.requestHeaders;\n\tconst { url } = data;\n\n\tif (this.cache.exists(url)) {\n\t\tthis.triggerEvent('pageRetrievedFromCache');\n\t\treturn Promise.resolve(this.cache.getPage(url));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tfetch({ ...data, headers }, (response) => {\n\t\t\tif (response.status === 500) {\n\t\t\t\tthis.triggerEvent('serverError');\n\t\t\t\treject(url);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// get json data\n\t\t\tconst page = this.getPageData(response);\n\t\t\tif (!page || !page.blocks.length) {\n\t\t\t\treject(url);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// render page\n\t\t\tconst cacheablePageData = { ...page, url };\n\t\t\tthis.cache.cacheUrl(cacheablePageData);\n\t\t\tthis.triggerEvent('pageLoaded');\n\t\t\tresolve(cacheablePageData);\n\t\t});\n\t});\n}\n", "import Swup from '../Swup.js';\nimport { PageRenderOptions } from './renderPage.js';\n\nexport const leavePage = function (this: Swup, { event, skipTransition }: PageRenderOptions = {}) {\n\tconst isHistoryVisit = event instanceof PopStateEvent;\n\n\tif (skipTransition) {\n\t\tthis.triggerEvent('animationSkipped');\n\t\treturn [Promise.resolve()];\n\t}\n\n\tthis.triggerEvent('animationOutStart');\n\n\t// handle classes\n\tdocument.documentElement.classList.add('is-changing', 'is-leaving', 'is-animating');\n\tif (isHistoryVisit) {\n\t\tdocument.documentElement.classList.add('is-popstate');\n\t}\n\n\t// animation promise stuff\n\tconst animationPromises: Promise<void>[] = this.getAnimationPromises('out');\n\tPromise.all(animationPromises).then(() => {\n\t\tthis.triggerEvent('animationOutDone');\n\t});\n\n\treturn animationPromises;\n};\n", "import { classify, createHistoryRecord, updateHistoryRecord, getCurrentUrl } from '../helpers.js';\nimport Swup from '../Swup.js';\nimport { PageRecord } from './Cache.js';\n\nexport type HistoryAction = 'push' | 'replace';\n\nexport type TransitionOptions = {\n\turl: string;\n\tcustomTransition?: string;\n\thistory?: HistoryAction;\n};\n\nexport type PageLoadOptions = {\n\turl: string;\n\tcustomTransition?: string;\n\thistory?: HistoryAction;\n\tevent?: PopStateEvent;\n};\n\nexport function loadPage(this: Swup, data: TransitionOptions) {\n\tconst { url } = data;\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url)) {\n\t\twindow.location.href = url;\n\t} else {\n\t\tthis.performPageLoad(data);\n\t}\n}\n\nexport function performPageLoad(this: Swup, data: PageLoadOptions) {\n\tconst { url, event, customTransition, history: historyAction = 'push' } = data ?? {};\n\n\tconst isHistoryVisit = event instanceof PopStateEvent;\n\tconst skipTransition = this.shouldSkipTransition({ url, event });\n\n\tthis.triggerEvent('transitionStart', event);\n\n\t// set transition object\n\tthis.updateTransition(getCurrentUrl(), url, customTransition);\n\tif (customTransition != null) {\n\t\tdocument.documentElement.classList.add(`to-${classify(customTransition)}`);\n\t}\n\n\t// start/skip animation\n\tconst animationPromises = this.leavePage({ event, skipTransition });\n\n\t// Load page data\n\tconst fetchPromise = this.fetchPage(data);\n\n\t// create history record if this is not a popstate call (with or without anchor)\n\tif (!isHistoryVisit) {\n\t\tconst historyUrl = url + (this.scrollToElement || '');\n\t\tif (historyAction === 'replace') {\n\t\t\tupdateHistoryRecord(historyUrl);\n\t\t} else {\n\t\t\tcreateHistoryRecord(historyUrl);\n\t\t}\n\t}\n\n\tthis.currentPageUrl = getCurrentUrl();\n\n\t// when everything is ready, render the page\n\tPromise.all<PageRecord | void>([fetchPromise, ...animationPromises])\n\t\t.then(([pageData]) => {\n\t\t\tthis.renderPage(pageData as PageRecord, { event, skipTransition });\n\t\t})\n\t\t.catch((errorUrl) => {\n\t\t\t// Return early if errorUrl is not defined (probably aborted preload request)\n\t\t\tif (errorUrl === undefined) return;\n\n\t\t\t// Rewrite `skipPopStateHandling` to redirect manually when `history.go` is processed\n\t\t\tthis.options.skipPopStateHandling = () => {\n\t\t\t\twindow.location = errorUrl;\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t// Go back to the actual page we're still at\n\t\t\thistory.go(-1);\n\t\t});\n}\n", "/**\n * Perform the replacement of content after loading a page.\n *\n * This method can be replaced or augmented by plugins to allow pausing.\n *\n * It takes an object with the page data as return from `getPageData` and has to\n * return a Promise that resolves once all content has been replaced and the\n * site is ready to start animating in the new page.\n *\n * @param {object} page The page object\n * @returns Promise\n */\nexport const replaceContent = function ({ blocks, title }: { blocks: string[]; title: string }) {\n\t// Replace content blocks\n\tblocks.forEach((html, i) => {\n\t\t// we know the block exists at this point\n\t\tconst block = document.body.querySelector(`[data-swup=\"${i}\"]`)!;\n\t\tblock.outerHTML = html;\n\t});\n\n\t// Update browser title\n\tdocument.title = title;\n\n\t// Return a Promise to allow plugins to defer\n\treturn Promise.resolve();\n};\n", "import Swup from '../Swup.js';\nimport { DelegateEvent } from 'delegate-it';\n\ntype HandlersEventMap = {\n\tanimationInDone: undefined;\n\tanimationInStart: undefined;\n\tanimationOutDone: undefined;\n\tanimationOutStart: undefined;\n\tanimationSkipped: undefined;\n\tclickLink: DelegateEvent<MouseEvent>;\n\tcontentReplaced: PopStateEvent | undefined;\n\tdisabled: undefined;\n\tenabled: undefined;\n\topenPageInNewTab: DelegateEvent<MouseEvent>;\n\tpageLoaded: undefined;\n\tpageRetrievedFromCache: undefined;\n\tpageView: PopStateEvent | undefined;\n\tpopState: PopStateEvent;\n\tsamePage: DelegateEvent<MouseEvent>;\n\tsamePageWithHash: DelegateEvent<MouseEvent>;\n\tserverError: undefined;\n\ttransitionStart: PopStateEvent | undefined;\n\ttransitionEnd: PopStateEvent | undefined;\n\twillReplaceContent: PopStateEvent | undefined;\n};\ntype AvailableEventNames = keyof HandlersEventMap;\n\nexport type Handler<T extends keyof HandlersEventMap> = (event: HandlersEventMap[T]) => void;\nexport type Handlers = {\n\t[Key in keyof HandlersEventMap]: Handler<Key>[];\n};\n\nexport function on<TEventType extends AvailableEventNames>(\n\tthis: Swup,\n\tevent: TEventType,\n\thandler: Handler<TEventType>\n): void {\n\tconst eventHandlers = this._handlers[event] as Handler<TEventType>[];\n\n\tif (eventHandlers) {\n\t\teventHandlers.push(handler);\n\t} else {\n\t\tconsole.warn(`Unsupported event ${event}.`);\n\t}\n}\n\nexport function off<TEventType extends AvailableEventNames>(\n\tthis: Swup,\n\tevent?: TEventType,\n\thandler?: Handler<TEventType>\n) {\n\tif (event && handler) {\n\t\tconst eventHandlers = this._handlers[event] as Handler<TEventType>[];\n\t\t// Remove specific handler\n\t\tif (eventHandlers.includes(handler)) {\n\t\t\t(this._handlers[event] as Handler<TEventType>[]) = eventHandlers.filter(\n\t\t\t\t(h) => h !== handler\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.warn(`Handler for event '${event}' not found.`);\n\t\t}\n\t} else if (event) {\n\t\t// Remove all handlers for specific event\n\t\tthis._handlers[event] = [];\n\t} else {\n\t\t// Remove all handlers for all events\n\t\tObject.keys(this._handlers).forEach((event) => {\n\t\t\tthis._handlers[event as keyof HandlersEventMap] = [];\n\t\t});\n\t}\n}\n\nexport function triggerEvent<TEventType extends AvailableEventNames>(\n\tthis: Swup,\n\teventName: TEventType,\n\toriginalEvent?: HandlersEventMap[TEventType]\n): void {\n\tconst eventHandlers = this._handlers[eventName] as Handler<TEventType>[];\n\n\t// call saved handlers with \"on\" method and pass originalEvent object if available\n\teventHandlers.forEach((handler) => {\n\t\ttry {\n\t\t\thandler(originalEvent as HandlersEventMap[TEventType]);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t});\n\n\t// trigger event on document with prefix \"swup:\"\n\tconst event = new CustomEvent(`swup:${eventName}`, { detail: eventName });\n\tdocument.dispatchEvent(event);\n}\n", "import Swup from '../Swup.js';\n\nexport type Plugin = {\n\tname: string;\n\tisSwupPlugin: true;\n\tmount: () => void;\n\tunmount: () => void;\n\n\t// the instance is assigned later on after passing to swup\n\tswup?: Swup;\n\n\t// these are possibly undefined for backward compatibility\n\tversion?: string;\n\trequires?: Record<string, string>;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore\n\treturn maybeInvalidPlugin?.isSwupPlugin;\n};\n\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find((plugin) => plugin === pluginOrName || plugin.name === pluginOrName);\n}\n", "import { Location, updateHistoryRecord, getCurrentUrl } from '../helpers.js';\nimport Swup from '../Swup.js';\nimport { PageRecord } from './Cache.js';\n\nexport type PageRenderOptions = {\n\tevent?: PopStateEvent;\n\tskipTransition?: boolean;\n};\n\nexport const renderPage = function (\n\tthis: Swup,\n\tpage: PageRecord,\n\t{ event, skipTransition }: PageRenderOptions = {}\n) {\n\tdocument.documentElement.classList.remove('is-leaving');\n\n\t// do nothing if another page was requested in the meantime\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), page.url)) {\n\t\treturn;\n\t}\n\n\tconst { url } = Location.fromUrl(page.responseURL);\n\n\t// update cache and state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tthis.cache.cacheUrl({ ...page, url });\n\t\tthis.currentPageUrl = getCurrentUrl();\n\t\tupdateHistoryRecord(url);\n\t}\n\n\t// only add for page loads with transitions\n\tif (!skipTransition) {\n\t\tdocument.documentElement.classList.add('is-rendering');\n\t}\n\n\tthis.triggerEvent('willReplaceContent', event);\n\n\tthis.replaceContent(page).then(() => {\n\t\tthis.triggerEvent('contentReplaced', event);\n\t\tthis.triggerEvent('pageView', event);\n\n\t\t// empty cache if it's disabled (in case preload plugin filled it)\n\t\tif (!this.options.cache) {\n\t\t\tthis.cache.empty();\n\t\t}\n\n\t\t// Perform in transition\n\t\tthis.enterPage({ event, skipTransition });\n\n\t\t// reset scroll-to element\n\t\tthis.scrollToElement = null;\n\t});\n};\n", "import Swup from '../Swup.js';\n\nexport function updateTransition(this: Swup, from: string, to: string, custom?: string): void {\n\tthis.transition = { from, to, custom };\n}\n\nexport function shouldSkipTransition(this: Swup, { event }: { url?: string; event?: Event }) {\n\tconst isHistoryVisit = event instanceof PopStateEvent;\n\treturn !!(isHistoryVisit && !this.options.animateHistoryBrowsing);\n}\n", "import { DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport {\n\tcleanupAnimationClasses,\n\tdelegateEvent,\n\tgetCurrentUrl,\n\tLocation,\n\tmarkSwupElements,\n\tupdateHistoryRecord\n} from './helpers.js';\nimport { Unsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { enterPage } from './modules/enterPage.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { getAnimationPromises } from './modules/getAnimationPromises.js';\nimport { getPageData } from './modules/getPageData.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { leavePage } from './modules/leavePage.js';\nimport { HistoryAction, loadPage, performPageLoad } from './modules/loadPage.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { on, off, triggerEvent, Handlers } from './modules/events.js';\nimport { use, unuse, findPlugin, Plugin } from './modules/plugins.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { updateTransition, shouldSkipTransition } from './modules/transitions.js';\n\nimport { queryAll } from './utils.js';\n\nexport type Transition = {\n\tfrom?: string;\n\tto?: string;\n\tcustom?: string;\n};\n\ntype DelegatedListeners = {\n\tclick?: Unsubscribe;\n};\n\nexport type Options = {\n\tanimateHistoryBrowsing: boolean;\n\tanimationSelector: string | false;\n\tlinkSelector: string;\n\tcache: boolean;\n\tcontainers: string[];\n\trequestHeaders: Record<string, string>;\n\tplugins: Plugin[];\n\tskipPopStateHandling: (event: any) => boolean;\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\tresolveUrl: (url: string) => string;\n};\n\nexport default class Swup {\n\tversion = version;\n\n\t_handlers: Handlers = {\n\t\tanimationInDone: [],\n\t\tanimationInStart: [],\n\t\tanimationOutDone: [],\n\t\tanimationOutStart: [],\n\t\tanimationSkipped: [],\n\t\tclickLink: [],\n\t\tcontentReplaced: [],\n\t\tdisabled: [],\n\t\tenabled: [],\n\t\topenPageInNewTab: [],\n\t\tpageLoaded: [],\n\t\tpageRetrievedFromCache: [],\n\t\tpageView: [],\n\t\tpopState: [],\n\t\tsamePage: [],\n\t\tsamePageWithHash: [],\n\t\tserverError: [],\n\t\ttransitionStart: [],\n\t\ttransitionEnd: [],\n\t\twillReplaceContent: []\n\t};\n\n\t// variable for anchor to scroll to after render\n\tscrollToElement: string | null = null;\n\t// variable for save options\n\toptions: Options;\n\t// running plugin instances\n\tplugins: Plugin[] = [];\n\t// variable for current transition info object\n\ttransition: Transition = {};\n\t// cache instance\n\tcache: Cache;\n\t// allows us to compare the current and new path inside popStateHandler\n\tcurrentPageUrl = getCurrentUrl();\n\t// variable for keeping event listeners from \"delegate\"\n\tdelegatedListeners: DelegatedListeners = {};\n\t// so we are able to remove the listener\n\tboundPopStateHandler: (event: PopStateEvent) => void;\n\n\tloadPage = loadPage;\n\tperformPageLoad = performPageLoad;\n\tleavePage = leavePage;\n\trenderPage = renderPage;\n\treplaceContent = replaceContent;\n\tenterPage = enterPage;\n\ttriggerEvent = triggerEvent;\n\tdelegateEvent = delegateEvent;\n\ton = on;\n\toff = off;\n\tupdateTransition = updateTransition;\n\tshouldSkipTransition = shouldSkipTransition;\n\tgetAnimationPromises = getAnimationPromises;\n\tgetPageData = getPageData;\n\tfetchPage = fetchPage;\n\tgetAnchorElement = getAnchorElement;\n\tlog: (message: string, context?: any) => void = () => {}; // here so it can be used by plugins\n\tuse = use;\n\tunuse = unuse;\n\tfindPlugin = findPlugin;\n\tgetCurrentUrl = getCurrentUrl;\n\tcleanupAnimationClasses = cleanupAnimationClasses;\n\n\tdefaults: Options = {\n\t\tanimateHistoryBrowsing: false,\n\t\tanimationSelector: '[class*=\"transition-\"]',\n\t\tcache: true,\n\t\tcontainers: ['#swup'],\n\t\tignoreVisit: (url, { el, event } = {}) => !!el?.closest('[data-no-swup]'),\n\t\tlinkSelector: 'a[href]',\n\t\tplugins: [],\n\t\tresolveUrl: (url) => url,\n\t\trequestHeaders: {\n\t\t\t'X-Requested-With': 'swup',\n\t\t\tAccept: 'text/html, application/xhtml+xml'\n\t\t},\n\t\tskipPopStateHandling: (event) => event.state?.source !== 'swup'\n\t};\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.boundPopStateHandler = this.popStateHandler.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\n\t\tthis.enable();\n\t}\n\n\tenable() {\n\t\t// Check for Promise support\n\t\tif (typeof Promise === 'undefined') {\n\t\t\tconsole.warn('Promise is not supported');\n\t\t\treturn;\n\t\t}\n\n\t\t// Add event listeners\n\t\tthis.delegatedListeners.click = delegateEvent(\n\t\t\tthis.options.linkSelector,\n\t\t\t'click',\n\t\t\tthis.linkClickHandler.bind(this)\n\t\t);\n\n\t\twindow.addEventListener('popstate', this.boundPopStateHandler);\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Mark swup blocks in html\n\t\tmarkSwupElements(document.documentElement, this.options.containers);\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Modify initial history record\n\t\tupdateHistoryRecord();\n\n\t\t// Trigger enabled event\n\t\tthis.triggerEvent('enabled');\n\n\t\t// Add swup-enabled class to html tag\n\t\tdocument.documentElement.classList.add('swup-enabled');\n\n\t\t// Trigger page view event\n\t\tthis.triggerEvent('pageView');\n\t}\n\n\tdestroy() {\n\t\t// remove delegated listeners\n\t\tthis.delegatedListeners.click!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.boundPopStateHandler);\n\n\t\t// empty cache\n\t\tthis.cache.empty();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => {\n\t\t\tthis.unuse(plugin);\n\t\t});\n\n\t\t// remove swup data atributes from blocks\n\t\tqueryAll('[data-swup]').forEach((element) => {\n\t\t\telement.removeAttribute('data-swup');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.off();\n\n\t\t// trigger disable event\n\t\tthis.triggerEvent('disabled');\n\n\t\t// remove swup-enabled class from html tag\n\t\tdocument.documentElement.classList.remove('swup-enabled');\n\t}\n\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tlinkClickHandler(event: DelegateEvent<MouseEvent>) {\n\t\tconst linkEl = event.delegateTarget;\n\t\tconst { href, url, hash } = Location.fromElement(linkEl as HTMLAnchorElement);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el: linkEl, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.triggerEvent('openPageInNewTab', event);\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.triggerEvent('clickLink', event);\n\t\tevent.preventDefault();\n\n\t\t// Handle links to the same page and exit early, where applicable\n\t\tif (!url || url === getCurrentUrl()) {\n\t\t\tthis.handleLinkToSamePage(url, hash, event);\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(url, getCurrentUrl())) return;\n\n\t\t// Store the element that should be scrolled to after loading the next page\n\t\tthis.scrollToElement = hash || null;\n\n\t\t// Get the custom transition name, if present\n\t\tconst customTransition = linkEl.getAttribute('data-swup-transition') || undefined;\n\n\t\t// Get the history action, if set\n\t\tlet history: HistoryAction | undefined;\n\t\tconst historyAttr = linkEl.getAttribute('data-swup-history');\n\t\tif (historyAttr && ['push', 'replace'].includes(historyAttr)) {\n\t\t\thistory = historyAttr as HistoryAction;\n\t\t}\n\n\t\t// Finally, proceed with loading the page\n\t\tthis.performPageLoad({ url, customTransition, history });\n\t}\n\n\thandleLinkToSamePage(url: string, hash: string, event: DelegateEvent<MouseEvent>) {\n\t\t// Emit event and exit early if the url points to the same page without hash\n\t\tif (!hash) {\n\t\t\tthis.triggerEvent('samePage', event);\n\t\t\treturn;\n\t\t}\n\n\t\t// link to the same URL with hash\n\t\tthis.triggerEvent('samePageWithHash', event);\n\n\t\tconst element = getAnchorElement(hash);\n\n\t\t// Warn and exit early if no matching element was found for the hash\n\t\tif (!element) {\n\t\t\treturn console.warn(`Element for offset not found (#${hash})`);\n\t\t}\n\n\t\tupdateHistoryRecord(url + hash);\n\t}\n\n\ttriggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpopStateHandler(event: PopStateEvent) {\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.currentPageUrl)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst href = event.state?.url ?? location.href;\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { event })) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tif (hash) {\n\t\t\tthis.scrollToElement = hash;\n\t\t} else {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tthis.triggerEvent('popState', event);\n\n\t\tif (!this.options.animateHistoryBrowsing) {\n\t\t\tdocument.documentElement.classList.remove('is-animating');\n\t\t\tcleanupAnimationClasses();\n\t\t}\n\n\t\tthis.performPageLoad({ url, event });\n\t}\n\n\t/**\n\t * Utility function to validate and run the global option 'resolveUrl'\n\t * @param {string} url\n\t * @returns {string} the resolved url\n\t */\n\tresolveUrl(url: string) {\n\t\tif (typeof this.options.resolveUrl !== 'function') {\n\t\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\t\treturn url;\n\t\t}\n\t\tconst result = this.options.resolveUrl(url);\n\t\tif (!result || typeof result !== 'string') {\n\t\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\t\treturn url;\n\t\t}\n\t\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\t\treturn url;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Compares the resolved version of two paths and returns true if they are the same\n\t * @param {string} url1\n\t * @param {string} url2\n\t * @returns {boolean}\n\t */\n\tisSameResolvedUrl(url1: string, url2: string) {\n\t\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n\t}\n}\n"],
  "mappings": ";;;AACA,IAAM,SAAS,oBAAI,QAAQ;AAC3B,SAAS,WAAW,QAAQ,aAAa,UAAU,OAAO;AACtD,MAAI,CAAC,UAAU,CAAC,OAAO,IAAI,WAAW,GAAG;AACrC,WAAO;AAAA,EACX;AACA,QAAM,aAAa,OAAO,IAAI,WAAW,KAClC,oBAAI,QAAQ;AACnB,SAAO,IAAI,aAAa,UAAU;AAClC,QAAM,SAAS,WAAW,IAAI,QAAQ,KAAK,oBAAI,IAAI;AACnD,aAAW,IAAI,UAAU,MAAM;AAC/B,QAAM,UAAU,OAAO,IAAI,KAAK;AAChC,MAAI,QAAQ;AACR,WAAO,IAAI,KAAK;AAAA,EACpB,OACK;AACD,WAAO,OAAO,KAAK;AAAA,EACvB;AACA,SAAO,WAAW;AACtB;AACA,SAAS,YAAY,OAAO,UAAU;AAClC,MAAI,SAAS,MAAM;AACnB,MAAI,kBAAkB,MAAM;AACxB,aAAS,OAAO;AAAA,EACpB;AACA,MAAI,kBAAkB,WAAW,MAAM,yBAAyB,SAAS;AAErE,UAAM,UAAU,OAAO,QAAQ,QAAQ;AACvC,QAAI,WAAW,MAAM,cAAc,SAAS,OAAO,GAAG;AAClD,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AAEA,SAAS,SAAS,UAAU,MAAM,UAAU,UAAU,CAAC,GAAG;AACtD,QAAM,EAAE,QAAQ,OAAO,SAAS,IAAI;AACpC,MAAI,iCAAQ,SAAS;AACjB;AAAA,EACJ;AAEA,QAAM,EAAE,MAAM,GAAG,sBAAsB,IAAI;AAE3C,QAAM,cAAc,gBAAgB,WAAW,KAAK,kBAAkB;AAEtE,QAAM,UAAU,QAAQ,OAAO,YAAY,WAAW,QAAQ,UAAU,OAAO;AAC/E,QAAM,aAAa,CAAC,UAAU;AAC1B,UAAM,iBAAiB,YAAY,OAAO,QAAQ;AAClD,QAAI,gBAAgB;AAChB,YAAM,gBAAgB,OAAO,OAAO,OAAO,EAAE,eAAe,CAAC;AAC7D,eAAS,KAAK,aAAa,aAAa;AACxC,UAAI,MAAM;AACN,oBAAY,oBAAoB,MAAM,YAAY,qBAAqB;AACvE,mBAAW,OAAO,aAAa,UAAU,KAAK;AAAA,MAClD;AAAA,IACJ;AAAA,EACJ;AACA,QAAM,QAAQ,KAAK,UAAU,EAAE,UAAU,MAAM,QAAQ,CAAC;AACxD,QAAM,qBAAqB,WAAW,MAAM,aAAa,UAAU,KAAK;AACxE,MAAI,CAAC,oBAAoB;AACrB,gBAAY,iBAAiB,MAAM,YAAY,qBAAqB;AAAA,EACxE;AACA,mCAAQ,iBAAiB,SAAS,MAAM;AACpC,eAAW,OAAO,aAAa,UAAU,KAAK;AAAA,EAClD;AACJ;AACA,IAAO,mBAAQ;;;;;;;;;;;;;ACjEFA,IAAQA,IAAG,CAACC,GAAcC,OACvBC,OAAOF,CAAAA,EACpBG,YAAAA,EAGAC,QAAQ,aAAa,GAAA,EACrBA,QAAQ,YAAY,EAAA,EACpBA,QAAQ,QAAQ,GAAA,EAChBA,QAAQ,YAAY,EAAA,KACLH,MAAY;AATjBF,ICAAM,IAAgB,CAAA,EAAGC,MAAAA,EAAAA,IAA6B,CAAE,MACvDC,SAASC,WAAWD,SAASE,UAAUH,IAAOC,SAASD,OAAO;ADDzDP,IEEAW,IAAsB,CAClCC,GACAC,KAAsC,CAAA,MAAA;AAGtC,QAAUC,KAAAC,EAAA,EACTH,KAFDA,IAAMA,KAAON,EAAc,EAAEC,MAAAA,KAAM,CAAA,GAGlCS,QAAQC,KAAKD,OAAAA,GACbE,QAAQ,OAAA,GACLL,EAAAA;AAEJM,UAAQC,UAAUN,IAAM,IAAIF,CAAAA;AAC7B;AFdaZ,IGEmBqB,IAAG,CAClCT,IAAqB,MACrBC,KAAsC,CAAA,MAAA;AAEtCD,MAAMA,KAAON,EAAc,EAAEC,MAAAA,KAAM,CAAA;AACnC,QAAMO,KACFK,EAAAA,CAAAA,GAAAA,QAAQG,OACXV,EAAAA,KAAAA,GACAI,QAAQC,KAAKD,OAAAA,GACbE,QAAQ,OAAA,GACLL,EAAAA;AAEJM,UAAQI,aAAaT,IAAM,IAAIF,CAAAA;AAChC;AHfaZ,IIOAwB,IAAgB,CAC5BC,IACAC,IACAC,IACAC,OAAAA;AAEA,QAAAC,KAAmB,IAAA;AAOnB,SANAC,iBACCL,IACAC,IACAC,IACAC,EAAAA,GAEM,EAAEG,SAAS,MAAMC,GAAWC,MAAAA,EAAAA;AAAO;AJpB9BjC,IKAAkC,IAAQ,CAACT,GAAkBU,KAA8BC,aAAAA,GACtDC,cAA2BZ,CAAAA;ALD9BzB,IKIAsC,IAAW,CACvBb,GACAU,KAA8BC,aAEvBG,MAAMC,KAAKL,GAAQM,iBAAiBhB,CAAAA,CAAAA;ALR/BzB,IKWA0C,IAAYf,OAAAA;AACxBgB,wBAAsB,MAAA;AACrBA,0BAAsB,MAAA;AACrBhB,QAAAA;IACD,CAAA;EACD,CAAA;AAAA;ALhBY3B,IKmBA4C,IAAuBC,OAE/BC,OAAOC,OAAOD,OAAOC,IAAIC,SAClBD,IAACC,OAAOH,CAAAA,IAEXA;ALxBI7C,IK6BAiD,IAAQC,OAC8B,MAA3CC,OAAOD,EAAEE,MAAM,GAAA,EAAI,EAAG/C,QAAQ,KAAK,GAAA,CAAA;AL9B9BL,IMSeqD,IAAG,CAACC,GAAcC,OAAAA;AAAsC,MAAAC,IAAAC;AACnF,MAAWC,KAAGtB,SAASuB,cAAc,MAAA;AACrCD,EAAAA,GAAQE,YAAYN;AACpB,MAAIO,KAAmB,CAAA;AAEvBN,EAAAA,GAAWO,QAASrC,CAAAA,OAAAA;AACnB,QAAgC,QAA5BS,EAAMT,IAAUiC,EAAAA;AAEnB,aADAK,QAAQC,KAAAA,oBAAyBvC,uBAAAA,GAAAA;AAG7Ba,MAASb,EAAAA,EAAUwC,WAAW3B,EAASb,IAAUiC,EAAAA,EAASO,UAC7DF,QAAQC,KAAK,2DAAA,GAEd1B,EAASb,EAAAA,EAAUqC,QAAQ,CAACI,IAAMC,OAAAA;AACjC7B,QAASb,IAAUiC,EAAAA,EAASS,EAAAA,EAAOC,aAAa,aAAajE,OAAO0D,GAAOI,MAAAA,CAAAA,GAC3EJ,GAAOQ,KAAK/B,EAASb,IAAUiC,EAAAA,EAASS,EAAAA,EAAOG,SAAAA;IAChD,CAAA;EACA,CAAA;AAGF,QAAAC,MAAc,SAAAf,KAAAtB,EAAM,SAASwB,EAAAA,KAAAA,SAAfF,GAAyBgB,cAAa,IAAAC,KAClC,SAAAvC,KAAAA,EAAM,QAAQwB,EAAAA,KAAAA,SAAdD,GAAwBiB;AAO1C,SAJAhB,GAAQE,YAAY,IAEpBF,KAAU,MAEH,EAAEiB,OAAAA,IAAOC,WAAAA,IAAWf,QAAAA,IAAQgB,iBAAiBvB,EAAAA;AAAI;ANrC5CtD,IOGA8E,IAAQ,CACpBlD,GACAD,OAAAA;AAEA,QAAcoD,KAAG,EAChBnE,KAAKkC,OAAOtC,SAASC,WAAWqC,OAAOtC,SAASE,QAChDsE,QAAQ,OACRlE,MAAM,MACNmE,SAAS,CAAA,EAAA,GAAA,EAGJrE,KAAEA,IAAGoE,QAAEA,IAAMC,SAAEA,IAAOnE,MAAEA,GAAAA,IAAciE,EAAAA,CAAAA,GAAAA,IAAanD,CAAAA,GAEnDsD,KAAU,IAAoBC;AAepC,SAbAD,GAAQE,qBAAqB,WAAA;AACD,UAAvBF,GAAQG,cAEX1D,GAASuD,EAAAA;EAEX,GAEAA,GAAQI,KAAKN,IAAQpE,IAAAA,IAAK,GAC1B2E,OAAOC,QAAQP,EAAAA,EAASnB,QAAQ,CAAA,CAAE2B,IAAKC,EAAAA,MAAAA;AACtCR,IAAAA,GAAQS,iBAAiBF,IAAKC,EAAAA;EAC/B,CAAA,GACAR,GAAQU,KAAK9E,EAAAA,GAAAA;AAAAA;AAAAA,ICvBQ+E,IDuBR/E,cCvBmBgF,IAAAA;EAChCC,YAAYnF,GAAaoF,KAAe5D,SAAS6D,SAAAA;AAChDC,UAAMtF,EAAIuF,SAAAA,GAAYH,EAAAA;EACvB;EAEOpF,IAAAA,MAAAA;AACN,WAAA,KAAYH,WAAW2F,KAAK1F;EAC7B;EAOA2F,OAAAA,YAAmBC,GAAAA;AAClB,UAAMC,KAAOD,EAAGE,aAAa,MAAA,KAAWF,EAAGE,aAAa,YAAA;AACxD,WAAA,IAAmBX,EAACU,EAAAA;EACrB;EAOAF,OAAAA,QAAezF,GAAAA;AACd,WAAO,IAAA,EAAaA,CAAAA;EACrB;AAAA;AC9BY6F,IAAAA,IAAmB,CAACC,GAAkBnD,OAAAA;AAClD,MAAIM,KAAS;AAEbN,EAAAA,GAAWO,QAASrC,CAAAA,OAAAA;AACa,YAA5BS,EAAMT,IAAUiF,CAAAA,IACnB3C,QAAQC,KAAAA,oBAAyBvC,uBAAAA,IAEjCa,EAASb,EAAAA,EAAUqC,QAAQ,CAACI,IAAeC,OAAAA;AAC1C7B,QAASb,IAAUiF,CAAAA,EAASvC,EAAAA,EAAOC,aAAa,aAAajE,OAAO0D,EAAAA,CAAAA,GACpEA;IAAM,CAAA;EAEP,CAAA;AAEH;AAba4C,ICFAE,IAAejC,OAC3B,OAAOkC,KAAKlC,CAAAA,KAAc,CAAC,eAAe,gBAAgB,aAAA,EAAemC,SAASnC,CAAAA;ADCtE+B,ICCAK,IAA0B,MAAA;AACtC,QACMC,IADc3E,SAAS4E,gBAAgBtC,UAAUuC,MAAM,GAAA,EAC3BC,OAAOP,CAAAA;AACzCvE,WAAS4E,gBAAgBG,UAAUC,OAAAA,GAAUL,CAAAA;AAC9C;ACCaM,IAAAA,IAAAA,MAAAA;EAKZtB,YAAYuB,GAAAA;AAJZC,SAAAA,QAAoC,CAAE,GAAAnB,KACtCoB,OAA0B,MAAIpB,KAC9BkB,OAAAA,QAGClB,KAAKkB,OAAOA;EACb;EAEAG,YAAY7G,GAAAA;AACX,WAAOwF,KAAKkB,KAAKI,WAAW7B,EAAS8B,QAAQ/G,CAAAA,EAAKA,GAAAA;EACnD;EAEAgH,SAASC,GAAAA;AACRA,MAAKjH,MAAMwF,KAAKqB,YAAYI,EAAKjH,GAAAA,GAC7BiH,EAAKjH,OAAOwF,KAAKmB,SAAU,MAC9BnB,KAAKmB,MAAMM,EAAKjH,GAAAA,IAAOiH,IAExBA,EAAKC,cAAc1B,KAAKqB,YAAYI,EAAKC,WAAAA,GACzC1B,KAAKoB,OAAOpB,KAAKmB,MAAMM,EAAKjH,GAAAA,GAC5BwF,KAAKkB,KAAKS,IAAc,UAAAxC,OAAOyC,KAAK5B,KAAKmB,KAAAA,EAAOtD,WAAWmC,KAAKmB,KAAAA;EACjE;EAEAU,QAAQrH,GAAAA;AAEP,WADAA,IAAMwF,KAAKqB,YAAY7G,CAAAA,GACZwF,KAACmB,MAAM3G,CAAAA;EACnB;EAEAsH,iBAAAA;AACC,WAAO9B,KAAK6B,QAAQ3H,EAAAA,CAAAA;EACrB;EAEA6H,OAAOvH,GAAAA;AAEN,YADAA,IAAMwF,KAAKqB,YAAY7G,CAAAA,MACTwF,KAAKmB;EACpB;EAEAa,QAAAA;AACChC,SAAKmB,QAAQ,CAAE,GACfnB,KAAKoB,OAAO,MACZpB,KAAKkB,KAAKS,IAAI,eAAA;EACf;EAEAX,OAAOxG,GAAAA;AAAAA,WACCwF,KAAKmB,MAAMnB,KAAKqB,YAAY7G,CAAAA,CAAAA;EACpC;AAAA;ACjDYyH,IAAAA,IAAY,SAAA,EAAsBC,OAAEA,GAAKC,gBAAEA,GAAAA,IAAsC,CAAA,GAAA;AAC7F,MAAIA;AAGH,WAFAnC,KAAKoC,aAAa,iBAAiBF,CAAAA,GACnClC,KAAKU,wBAAAA,GACE,CAAC2B,QAAQC,QAAAA,CAAAA;AAGjBhG,IAAS,MAAA;AACR0D,SAAKoC,aAAa,kBAAA,GAClBpG,SAAS4E,gBAAgBG,UAAUC,OAAO,cAAA;EAC3C,CAAA;AAEA,QAAMuB,KAAoBvC,KAAKwC,qBAAqB,IAAA;AAMpD,SALAH,QAAQI,IAAIF,EAAAA,EAAmBG,KAAK,MAAA;AACnC1C,SAAKoC,aAAa,iBAAA,GAClBpC,KAAKoC,aAAa,iBAAiBF,CAAAA,GACnClC,KAAKU,wBAAAA;EACN,CAAA,GACO6B;AACR;AAnBaN,ICKAU,IAAoBxI,OAAAA;AAKhC,MAJIA,KAA2B,QAAnBA,EAAKyI,OAAO,CAAA,MACvBzI,IAAOA,EAAK0I,UAAU,CAAA,IAAA,CAGlB1I;AACJ,WACA;AAED,QAAa2I,KAAGC,mBAAmB5I,CAAAA;AAEnC,SAAA,SACU6I,eAAe7I,CAAAA,KACxB6B,SAASgH,eAAeF,EAAAA,KACxBhH,EAAiB,WAAAc,EAAOzC,CAAAA,KAAAA,KACxB2B,EAAAA,WAAiBc,EAAOkG,EAAAA,KAAAA;AAAY;ACpBtC,IAAIG,IAAiB;AAArB,IACIC,IAAqB;AADzB,IAEiBC,IAAG;AAFpB,IAGqBC,IAAG;AAYRZ,SAAAA,EAKfa,GAAAA;AAEA,QAAAC,KAAiBtD,KAAKxE,QAAQ+H;AAG9B,MAAA,UAAIlI;AAGH,WAAO,CAACgH,QAAQC,QAAAA,CAAAA;AAGjB,QAAMkB,KAAmBtH,EAASb,IAAUW,SAASyH,IAAAA;AAGrD,MAAA,CAAKD,GAAiB3F;AAErB,WADAF,QAAQC,KAAAA,yDAA8DvC,MAAAA,GAC/D,CAACgH,QAAQC,QAAAA,CAAAA;AAGjB,QAAMC,KAAoBiB,GACxBE,IAAKpD,CAAAA,OAgBR,SAAuCA,IAAAA;AACtC,UAAA,EAAMhF,MAAEA,IAAIqI,SAAEA,IAAOC,WAAEA,GAAAA,IAiDRC,SACfvD,IACAwD,KAAkD,MAAA;AAElD,YAAYC,KAAGrH,OAAOsH,iBAAiB1D,EAAAA,GAIjC2D,KAAwB,GAAAhB,aACViB,KAAM,GAAAf,UAAAA,KACG,GAAAA,aAEPgB,KACrBJ,GAN0B,GAAAd,QAAAA,EAOzBpC,MAAM,IAAA,GACFuD,MACJL,GAAOE,EAAAA,KAAuB,IAC9BpD,MAAM,IAAA,GACewD,KAAGC,EAAiBH,IAAkBC,EAAAA,GAAAA,MAG3DL,GAAOG,EAAAA,KAAmB,IAC1BrD,MAAM,IAAA,GACF0D,MACJR,GAAOS,EAAAA,KAAsB,IAC7B3D,MAAM,IAAA,GACF4D,KAAmBH,EAAiBI,IAAiBH,EAAAA;AAE3D,UAAQjJ,KAAkB,IAAAqJ,KACZ,GAAAC,KACE;AA6BhB,aA3BqB,iBAAjBd,KACCO,KAAoB,MACvB/I,KAAO,cACPqI,KAAUU,IACVT,KAAYQ,GAAoBvG,UAEN,gBAAjBiG,KACNW,KAAmB,MACtBnJ,KAAO,aACPqI,KAAUc,IACVb,KAAYW,GAAmB1G,WAGhC8F,KAAU9I,KAAKgK,IAAIR,IAAmBI,EAAAA,GACtCnJ,KACCqI,KAAU,IACPU,KAAoBI,KACnB,eACA,cACD,MACJb,KAAYtI,KACA,iBAATA,KACC8I,GAAoBvG,SACpB0G,GAAmB1G,SACpB,IAGG,EACNvC,MAAAA,IACAqI,SAAAA,IACAC,WAAAA,GAAAA;IAEF,EAjHwDtD,EAAAA;AAGvD,QAAKhF,MAASqI;AAId,aAAWtB,IAAAA,QAASC,CAAAA,OAAAA;AACnB,cAAA7G,KAA0B,iBAATH,KAAwB4H,IAAqBE,GAAAA,KAC5C0B,YAAYC,IAAAA;AAC9B,YAAAC,KAAwB;AAExB,cAAAC,KAAY,MAAA;AACX3E,UAAAA,GAAQ4E,oBAAoBC,IAAUC,EAAAA,GACtC9C,GAAAA;QAAAA,GAGK8C,KAAwBlD,CAAAA,OAAAA;AAE7B,cAAIA,GAAMmD,WAAW/E,IAArB;AAIA,gBAAA,EA3BmC4B,CAAAA,OACrC,CAACgB,GAAoBE,CAAAA,EAAmB3C,SAASyB,GAAM5G,IAAAA,GA0BnB4G,EAAAA;AACjC,oBAAUoD,IAAAA,MAAM,sCAAA;AAAA,aAIIR,YAAYC,IAAAA,IAAQQ,MAAa,MACpCrD,GAAMsD,eAAAA,EAKlBC,MAAqB7B,MAC1B8B,GAAAA;UAdA;QAeA;AAGFC,mBAAW,MAAA;AACNF,UAAAA,KAAoB7B,MACvB8B,GAAAA;QACA,GACC/B,KAAU,CAAA,GAEbrD,GAAQsF,iBAAiBT,IAAUC,EAAAA;MAAAA,CAAAA;EAErC,EAhEkD9E,EAAAA,CAAAA,EAC/CQ,OAAO+E,OAAAA;AAET,SAAKtD,GAAkB1E,SAQxB0E,MAPE5E,QAAQC,KAAAA,mEAC4DvC,MAAAA,GAE7D,CAACgH,QAAQC,QAAAA,CAAAA;AAIlB;AAyHA,SAASgC,EAAiBwB,GAAkBC,IAAAA;AAC3C,SAAOD,EAAOjI,SAASkI,GAAUlI;AAChCiI,QAASA,EAAOE,OAAOF,CAAAA;AAGxB,SAAOjL,KAAKgK,IAAAA,GAAOkB,GAAUrC,IAAI,CAACuC,IAAUC,OAAMrJ,EAAKoJ,EAAAA,IAAYpJ,EAAKiJ,EAAOI,EAAAA,CAAAA,CAAAA,CAAAA;AAChF;AAAA,WA7KIxJ,OAAOyJ,mBAAAA,WAAiCzJ,OAAO0J,0BAClDnD,IAAiB,oBACjBC,IAAqB,wBAAA,WAGlBxG,OAAO2J,kBAAAA,WAAgC3J,OAAO4J,yBACjDnD,IAAgB,mBAChBC,IAAoB;ACTd,IAAiBmD,IAAG,SAAsBzH,GAAAA;AAIhD,QACM0H,KAAevJ,EADR6B,EAAQ2H,cACsBzG,KAAKxE,QAAQ2B,UAAAA;AAExD,SAAKqJ,KAKL7L,EAAA,CAAA,GACI6L,IAAY,EACf9E,aAAa5C,EAAQ4C,eAAehF,OAAOtC,SAAS+F,KAAAA,CAAAA,KANpDxC,QAAQC,KAAK,kCAAA,GACN;AAOT;AAAA,SClByB8I,EAAahM,GAAAA;AACrC,QAAMmE,KAAUmB,KAAKxE,QAAQmL,gBAAAA,EACvBnM,KAAEA,GAAAA,IAAQE;AAEhB,SAAIsF,KAAK4G,MAAM7E,OAAOvH,EAAAA,KACrBwF,KAAKoC,aAAa,wBAAA,GAAA,QACHE,QAAQtC,KAAK4G,MAAM/E,QAAQrH,EAAAA,CAAAA,KAAAA,IAGzB6H,QAAC,CAACC,IAASuE,OAAAA;AAC5BnI,MAAAA,EAAAA,CAAAA,GAAWhE,GAAI,EAAEmE,SAAAA,GAAAA,CAAAA,GAAYiI,CAAAA,OAAAA;AAC5B,UAAwB,QAApBA,GAASC;AAGZ,eAFA/G,KAAKoC,aAAa,aAAA,GAAA,KAClByE,GAAOrM,EAAAA;AAIR,YAAAwM,KAAahH,KAAKuG,YAAYO,EAAAA;AAC9B,UAAA,CAAKrF,MAAAA,CAASA,GAAKhE,OAAOI;AAEzB,eAAA,KADAgJ,GAAOrM,EAAAA;AAIR,YAAuByM,KAAAtM,EAAA,CAAA,GAAQ8G,IAAMjH,EAAAA,KAAAA,GAAAA,CAAAA;AACrCwF,WAAK4G,MAAMpF,SAASyF,EAAAA,GACpBjH,KAAKoC,aAAa,YAAA,GAClBE,GAAQ2E,EAAAA;IAAAA,CAAAA;EACR,CAAA;AAEH;AC/BO,IAAeC,IAAG,SAAA,EAAsBhF,OAAEA,GAAKC,gBAAEA,GAAAA,IAAsC,CAAA,GAAA;AAC7F,QAAoBgF,KAAGjF,aAAiBkF;AAExC,MAAIjF;AAEH,WADAnC,KAAKoC,aAAa,kBAAA,GACX,CAACC,QAAQC,QAAAA,CAAAA;AAGjBtC,OAAKoC,aAAa,mBAAA,GAGlBpG,SAAS4E,gBAAgBG,UAAUsG,IAAI,eAAe,cAAc,cAAA,GAChEF,MACHnL,SAAS4E,gBAAgBG,UAAUsG,IAAI,aAAA;AAIxC,QAAuB9E,KAAoBvC,KAAKwC,qBAAqB,KAAA;AAKrE,SAJAH,QAAQI,IAAIF,EAAAA,EAAmBG,KAAK,MAAA;AACnC1C,SAAKoC,aAAa,kBAAA;EACnB,CAAA,GAEOG;AACR;ACPM,SAAA,EAA+B7H,GAAAA;AACpC,QAAA,EAAMF,KAAEA,GAAAA,IAAQE;AAGZsF,OAAKsH,kBAAkB9M,EAAAA,IAC1BkC,OAAOtC,SAAS+F,OAAO3F,KAEvBwF,KAAKuH,gBAAgB7M,CAAAA;AAEvB;AAEM,SAAyB6M,EAAa7M,GAAAA;AAC3C,QAAA,EAAMF,KAAEA,IAAG0H,OAAEA,IAAKsF,kBAAEA,IAAkBzM,SAAS0M,KAAgB,OAAA,IAAe,QAAJ/M,IAAAA,IAAQ,CAAA,GAE5EyM,KAAiBjF,cAA8BkF,eAC/CjF,KAAiBnC,KAAK0H,qBAAqB,EAAElN,KAAAA,IAAK0H,OAAAA,GAAAA,CAAAA;AAExDlC,OAAKoC,aAAa,mBAAmBF,EAAAA,GAGrClC,KAAK2H,iBAAiBzN,EAAAA,GAAiBM,IAAKgN,EAAAA,GACpB,QAApBA,MACHxL,SAAS4E,gBAAgBG,UAAUsG,IAAU,MAAAzN,EAAS4N,EAAAA,GAAAA;AAIvD,QAAuBjF,KAAGvC,KAAKkH,UAAU,EAAEhF,OAAAA,IAAOC,gBAAAA,GAAAA,CAAAA,GAGhCyF,KAAG5H,KAAK0G,UAAUhM,CAAAA;AAGpC,MAAA,CAAKyM,IAAgB;AACpB,UAAAU,KAAmBrN,MAAOwF,KAAK8H,mBAAmB;AAC5B,kBAAlBL,KACHxM,EAAoB8M,EAAAA,IAEpBxN,EAAoBwN,EAAAA;EAErB;AAED/H,OAAKgI,iBAAiB9N,EAAAA,GAGtBmI,QAAQI,IAAuB,CAACmF,IAAAA,GAAiBrF,EAAAA,CAAAA,EAC/CG,KAAK,CAAA,CAAEuF,EAAAA,MAAAA;AACPjI,SAAKkI,WAAWD,IAAwB,EAAE/F,OAAAA,IAAOC,gBAAAA,GAAAA,CAAAA;EAAgB,CAAA,EAEjEgG,MAAOC,CAAAA,OAAAA;AAAAA,eAEHA,OAGJpI,KAAKxE,QAAQ6M,uBAAuB,OACnC3L,OAAOtC,WAAWgO,IAAAA,OAKnBrN,QAAQuN,GAAAA,EAAI;EAAC,CAAA;AAEhB;ACpEO,IAAoBC,IAAG,SAAA,EAAU9K,QAAEA,GAAMc,OAAEA,GAAAA,GAAAA;AAYjD,SAVAd,EAAOC,QAAQ,CAACR,IAAMgJ,OAAAA;AAEPlK,aAASyH,KAAKxH,cAA6B,eAAAiK,MAAAA,EACnDhI,YAAYhB;EAAAA,CAAAA,GAInBlB,SAASuC,QAAQA,IAGH8D,QAACC,QAAAA;AAChB;ACOgB,SAAA,EAEfJ,GACAsG,IAAAA;AAEA,QAAmBC,KAAGzI,KAAK0I,UAAUxG,CAAAA;AAEjCuG,EAAAA,KACHA,GAAcxK,KAAKuK,EAAAA,IAEnB7K,QAAQC,KAAAA,qBAA0BsE,IAAAA;AAEpC;AAEgByG,SAAAA,EAEfzG,GACAsG,IAAAA;AAEA,MAAItG,KAASsG,IAAS;AACrB,UAAmBC,KAAGzI,KAAK0I,UAAUxG,CAAAA;AAEjCuG,IAAAA,GAAchI,SAAS+H,EAAAA,IACzBxI,KAAK0I,UAAUxG,CAAAA,IAAmCuG,GAAc3H,OAC/D8H,CAAAA,OAAMA,OAAMJ,EAAAA,IAGd7K,QAAQC,KAAAA,sBAA2BsE,eAAAA;EAEpC;AAAUA,QAEVlC,KAAK0I,UAAUxG,CAAAA,IAAS,CAAA,IAGxB/C,OAAOyC,KAAK5B,KAAK0I,SAAAA,EAAWhL,QAASwE,CAAAA,OAAAA;AACpClC,WAAK0I,UAAUxG,EAAAA,IAAmC,CAAA;IACnD,CAAA;AAEF;AAEgB,SAAA,EAEf2G,GACAC,IAAAA;AAEsB9I,OAAK0I,UAAUG,CAAAA,EAGvBnL,QAAS8K,CAAAA,OAAAA;AACtB,QAAA;AACCA,MAAAA,GAAQM,EAAAA;IAGR,SAFQC,IAAP;AACDpL,cAAQoL,MAAMA,EAAAA;IACd;EAAA,CAAA;AAIF,QAAW7G,KAAG,IAAe8G,YAAS,QAAAH,KAAa,EAAEI,QAAQJ,EAAAA,CAAAA;AAC7D7M,WAASkN,cAAchH,EAAAA;AACxB;ACxEA,IAKaiH,IAAM,SAAsBC,GAAAA;AALnBC,MAAAA;AAMrB,MAAA,SANqBA,KAMHD,KAAAA,SAJXC,GAAoBC,cAAAA;AAU3B,QADAF,EAAOlI,OAAOlB,MAAAA,CACVoJ,EAAOG,sBACLH,EAAOG,mBAAAA;AAWb,aAPIH,EAAOI,gBACVJ,EAAOI,aAAAA,GAERJ,EAAOK,MAAAA,GAEPzJ,KAAK0J,QAAQzL,KAAKmL,CAAAA,GAEXpJ,KAAK0J;EAAAA;AAjBX/L,YAAQoL,MAAM,8BAA8BK,CAAAA;AAkB9C;AAEgBO,SAAAA,EAAkBC,GAAAA;AACjC,QAAMR,KAASpJ,KAAK6J,WAAWD,CAAAA;AAC/B,MAAKR;AAYL,WAPAA,GAAOU,QAAAA,GACHV,GAAOW,iBACVX,GAAOW,cAAAA,GAGR/J,KAAK0J,UAAU1J,KAAK0J,QAAQ5I,OAAQ6D,CAAAA,OAAMA,OAAMyE,EAAAA,GAAAA,KAEpCM;AAXX/L,UAAQoL,MAAM,kBAAkBK,EAAAA;AAYlC;AAEM,SAAA,EAAiCQ,GAAAA;AACtC,SAAA,KAAYF,QAAQM,KAAMZ,CAAAA,OAAWA,OAAWQ,KAAgBR,GAAOa,SAASL,CAAAA;AACjF;ACxDO,IAAA,IAAmB,SAEzBnI,GAAAA,EACAS,OAAEA,IAAKC,gBAAEA,GAAAA,IAAsC,CAAA,GAAA;AAK/C,MAHAnG,SAAS4E,gBAAgBG,UAAUC,OAAO,YAAA,GAAA,CAGrChB,KAAKkK,kBAAkBhQ,EAAAA,GAAiBuH,EAAKjH,GAAAA;AACjD;AAGD,QAAA,EAAMA,KAAEA,GAAAA,IAAQiF,EAAS8B,QAAQE,EAAKC,WAAAA;AAGjC1B,OAAKkK,kBAAkBhQ,EAAAA,GAAiBM,EAAAA,MAC5CwF,KAAK4G,MAAMpF,SAAcC,EAAAA,CAAAA,GAAAA,GAAAA,EAAMjH,KAAAA,GAAAA,CAAAA,CAAAA,GAC/BwF,KAAKgI,iBAAiB9N,EAAAA,GACtBe,EAAoBT,EAAAA,IAIhB2H,MACJnG,SAAS4E,gBAAgBG,UAAUsG,IAAI,cAAA,GAGxCrH,KAAKoC,aAAa,sBAAsBF,EAAAA,GAExClC,KAAKuI,eAAe9G,CAAAA,EAAMiB,KAAK,MAAA;AAC9B1C,SAAKoC,aAAa,mBAAmBF,EAAAA,GACrClC,KAAKoC,aAAa,YAAYF,EAAAA,GAGzBlC,KAAKxE,QAAQoL,SACjB5G,KAAK4G,MAAM5E,MAAAA,GAIZhC,KAAKiC,UAAU,EAAEC,OAAAA,IAAOC,gBAAAA,GAAAA,CAAAA,GAGxBnC,KAAK8H,kBAAkB;EAAA,CAAA;AAEzB;AAAA,SAAA,EClD6C1L,GAAc+N,IAAYC,IAAAA;AACtEpK,OAAKqK,aAAa,EAAEjO,MAAAA,GAAM+N,IAAAA,IAAIC,QAAAA,GAAAA;AAC/B;AAEgB,SAAA,EAAA,EAAiClI,OAAEA,EAAAA,GAAAA;AAElD,SAAA,EAAA,EADuBA,aAAiBkF,kBACXpH,KAAKxE,QAAQ8O;AAC3C;AC4CqBC,IAAAA,IAAAA,MAAAA;EAkFpB5K,YAAYnE,IAA4B,CAAE,GAAA;AAjF1CgP,SAAAA,UAAAA,SAAiBxK,KAEjB0I,YAAsB,EACrB+B,iBAAiB,CAAA,GACjBC,kBAAkB,CAAA,GAClBC,kBAAkB,CAAA,GAClBC,mBAAmB,CAAA,GACnBC,kBAAkB,CAAA,GAClBC,WAAW,CAAA,GACXC,iBAAiB,CAAA,GACjBC,UAAU,CAAA,GACVC,SAAS,CAAA,GACTC,kBAAkB,CAAA,GAClBC,YAAY,CAAA,GACZC,wBAAwB,CAAA,GACxBC,UAAU,CAAA,GACVC,UAAU,CAAA,GACVC,UAAU,CAAA,GACVC,kBAAkB,CAAA,GAClBC,aAAa,CAAA,GACbC,iBAAiB,CAAA,GACjBC,eAAe,CAAA,GACfC,oBAAoB,CAAA,EAAA,GAIrB9D,KAAAA,kBAAiC,MAAA,KAEjCtM,UAAAA,QAAOwE,KAEP0J,UAAoB,CAAA,GAEpBW,KAAAA,aAAyB,CAAA,GAEzBzD,KAAAA,QAAAA,QAEAoB,KAAAA,iBAAiB9N,EAAAA,GAEjB2R,KAAAA,qBAAyC,CAAA,GAEzCC,KAAAA,uBAAAA,QAAAA,KAEAC,WAAWA,GAAQ/L,KACnBuH,kBAAkBA,GAClBL,KAAAA,YAAYA,GAASlH,KACrBkI,aAAaA,GACbK,KAAAA,iBAAiBA,GAAAA,KACjBtG,YAAYA,GAASjC,KACrBoC,eAAeA,GACfhH,KAAAA,gBAAgBA,GAAa4E,KAC7BgM,KAAKA,GACLrD,KAAAA,MAAMA,GAAAA,KACNhB,mBAAmBA,GAAgB3H,KACnC0H,uBAAuBA,GACvBlF,KAAAA,uBAAuBA,GAAoBxC,KAC3CuG,cAAcA,GACdG,KAAAA,YAAYA,GAAAA,KACZ/D,mBAAmBA,GAAgB3C,KACnC2B,MAAgD,MAAA;IAAA,GAAA,KAChDwH,MAAMA,GAAGnJ,KACT2J,QAAQA,GACRE,KAAAA,aAAaA,GAAU7J,KACvB9F,gBAAgBA,GAChBwG,KAAAA,0BAA0BA,GAAAA,KAE1B/B,WAAoB,EACnB2L,wBAAAA,OACA/G,mBAAmB,0BACnBqD,OAAAA,MACAzJ,YAAY,CAAC,OAAA,GACb8O,aAAa,CAACzR,IAAAA,EAAO0F,IAAAA,GAAAA,IAAc,CAAA,MAAA,EAAW,QAAFA,MAAAA,CAAAA,GAAIgM,QAAQ,gBAAA,IACxDC,cAAc,WACdzC,SAAS,CAAA,GACTpI,YAAa9G,CAAAA,OAAQA,IACrBmM,gBAAgB,EACf,oBAAoB,QACpByF,QAAQ,mCAAA,GAET/D,sBAAuBnG,CAAAA,OAAAA;AAAU,UAAAmK;AAAA,aAAwB,YAAxB,SAAAA,KAAAnK,GAAMhH,SAAAA,SAANmR,GAAavR;IAAW,EAAA,GAKzDkF,KAAKxE,UAAOb,EAAA,CAAA,GAAQqF,KAAKrB,UAAanD,CAAAA,GAEtCwE,KAAK8L,uBAAuB9L,KAAKsM,gBAAgBC,KAAKvM,IAAAA,GAEtDA,KAAK4G,QAAQ,IAAS3F,EAACjB,IAAAA,GAEvBA,KAAKwM,OAAAA;EACN;EAEAA,SAAAA;AAEwB,mBAAA,OAALnK,WAMlBrC,KAAK6L,mBAAmBY,QAAQrR,EAC/B4E,KAAKxE,QAAQ2Q,cACb,SACAnM,KAAK0M,iBAAiBH,KAAKvM,IAAAA,CAAAA,GAG5BtD,OAAOkJ,iBAAiB,YAAY5F,KAAK8L,oBAAAA,GASzCzL,EAAiBrE,SAAS4E,iBAAiBZ,KAAKxE,QAAQ2B,UAAAA,GAGxD6C,KAAKxE,QAAQkO,QAAQhM,QAAS0L,OAAWpJ,KAAKmJ,IAAIC,CAAAA,CAAAA,GAGlDnO,EAAAA,GAGA+E,KAAKoC,aAAa,SAAA,GAGlBpG,SAAS4E,gBAAgBG,UAAUsG,IAAI,cAAA,GAGvCrH,KAAKoC,aAAa,UAAA,KAnCjBzE,QAAQC,KAAK,0BAAA;EAoCf;EAEAjC,UAAAA;AAECqE,SAAK6L,mBAAmBY,MAAO9Q,QAAAA,GAG/Be,OAAOwI,oBAAoB,YAAYlF,KAAK8L,oBAAAA,GAG5C9L,KAAK4G,MAAM5E,MAAAA,GAGXhC,KAAKxE,QAAQkO,QAAQhM,QAAS0L,OAAAA;AAC7BpJ,WAAK2J,MAAMP,CAAAA;IAAM,CAAA,GAIlBlN,EAAS,aAAA,EAAewB,QAAS4C,OAAAA;AAChCA,QAAQqM,gBAAgB,WAAA;IACzB,CAAA,GAGA3M,KAAK2I,IAAAA,GAGL3I,KAAKoC,aAAa,UAAA,GAGlBpG,SAAS4E,gBAAgBG,UAAUC,OAAO,cAAA;EAC3C;EAEAsG,kBAAkBnH,GAAAA,EAAcD,IAAEA,IAAEgC,OAAEA,GAAAA,IAA2C,CAAA,GAAA;AAChF,UAAA,EAAM0K,QAAEA,IAAMpS,KAAEA,IAAGL,MAAEA,GAAAA,IAASsF,EAAS8B,QAAQpB,CAAAA;AAG/C,WAAIyM,OAAWlQ,OAAOtC,SAASwS,UAAAA,EAAAA,CAK3B1M,MAAAA,CAAMF,KAAK6M,yBAAyB3M,EAAAA,MAAAA,CAAAA,CAKpCF,KAAKxE,QAAQyQ,YAAYzR,KAAML,IAAM,EAAE+F,IAAAA,IAAIgC,OAAAA,GAAAA,CAAAA;EAMhD;EAEAwK,iBAAiBxK,GAAAA;AAChB,UAAY4K,KAAG5K,EAAM6K,gBAAAA,EACf5M,MAAEA,IAAI3F,KAAEA,IAAGL,MAAEA,GAAAA,IAASsF,EAASuN,YAAYF,EAAAA;AAGjD,QAAI9M,KAAKsH,kBAAkBnH,IAAM,EAAED,IAAI4M,IAAQ5K,OAAAA,EAAAA,CAAAA;AAC9C;AAID,QAAIA,EAAM+K,WAAW/K,EAAMgL,WAAWhL,EAAMiL,YAAYjL,EAAMkL;AAE7D,aAAA,KADApN,KAAKoC,aAAa,oBAAoBF,CAAAA;AAKvC,QAAqB,MAAjBA,EAAMmL;AACT;AAOD,QAJArN,KAAKoC,aAAa,aAAaF,CAAAA,GAC/BA,EAAMoL,eAAAA,GAAAA,CAGD9S,MAAOA,OAAQN,EAAAA;AAEnB,aAAA,KADA8F,KAAKuN,qBAAqB/S,IAAKL,IAAM+H,CAAAA;AAKtC,QAAIlC,KAAKkK,kBAAkB1P,IAAKN,EAAAA,CAAAA;AAAkB;AAGlD8F,SAAK8H,kBAAkB3N,MAAQ;AAG/B,UAAsBqN,KAAGsF,GAAO1M,aAAa,sBAAA,KAAA;AAG7C,QAAsCrF;AACtC,UAAiByS,KAAGV,GAAO1M,aAAa,mBAAA;AACpCoN,IAAAA,MAAe,CAAC,QAAQ,SAAA,EAAW/M,SAAS+M,EAAAA,MAC/CzS,KAAUyS,KAIXxN,KAAKuH,gBAAgB,EAAE/M,KAAAA,IAAKgN,kBAAAA,IAAkBzM,SAAAA,GAAAA,CAAAA;EAC/C;EAEAwS,qBAAqB/S,GAAaL,IAAc+H,IAAAA;AAE/C,QAAK/H,IAAL;AAWA,UALA6F,KAAKoC,aAAa,oBAAoBF,EAAAA,GAAAA,CAEtBS,EAAiBxI,EAAAA;AAIhC,eAAA,QAAeyD,KAAAA,kCAAuCzD,KAAAA;AAGvDc,QAAoBT,IAAML,EAAAA;IAZzB;AAFA6F,WAAKoC,aAAa,YAAYF,EAAAA;EAehC;EAEA2K,yBAAyBY,GAAAA;AACxB,WAAA,CAAA,CAAIA,EAAUC,QAAQ,+BAAA;EAIvB;EAEApB,gBAAgBpK,GAAAA;AAAAA,QAAAA,IAAAA;AAEf,QAAIlC,KAAKxE,QAAQ6M,qBAAqBnG,CAAAA;AACrC;AAID,QAAIlC,KAAKkK,kBAAkBhQ,EAAAA,GAAiB8F,KAAKgI,cAAAA;AAChD;AAGD,UAAU7H,KAAmB,SAAnBwN,KAAG,SAAHC,KAAG1L,EAAMhH,SAAAA,SAAN0S,GAAapT,OAAGmT,KAAIvT,SAAS+F;AAG1C,QAAIH,KAAKsH,kBAAkBnH,IAAM,EAAE+B,OAAAA,EAAAA,CAAAA;AAClC;AAGD,UAAA,EAAM1H,KAAEA,IAAGL,MAAEA,GAAAA,IAASsF,EAAS8B,QAAQpB,EAAAA;AAEnChG,IAAAA,KACH6F,KAAK8H,kBAAkB3N,KAEvB+H,EAAMoL,eAAAA,GAGPtN,KAAKoC,aAAa,YAAYF,CAAAA,GAEzBlC,KAAKxE,QAAQ8O,2BACjBtO,SAAS4E,gBAAgBG,UAAUC,OAAO,cAAA,GAC1CN,EAAAA,IAGDV,KAAKuH,gBAAgB,EAAE/M,KAAAA,IAAK0H,OAAAA,EAAAA,CAAAA;EAC7B;EAOAZ,WAAW9G,GAAAA;AACV,QAAuC,cAAA,OAAA,KAAvBgB,QAAQ8F;AAEvB,aADA3D,QAAQC,KAAK,wDAAA,GACNpD;AAER,UAAA8I,KAAetD,KAAKxE,QAAQ8F,WAAW9G,CAAAA;AACvC,WAAKqT,MAA4B,YAAA,OAALA,KAIxBA,GAAOC,WAAW,IAAA,KAASD,GAAOC,WAAW,MAAA,KAChDnQ,QAAQC,KAAK,0DAAA,GAAA,KAIfiQ,MARElQ,QAAQC,KAAK,iDAAA,GACNpD;EAOT;EAQA0P,kBAAkB6D,GAAcC,IAAAA;AAC/B,WAAWhO,KAACsB,WAAWyM,CAAAA,MAAU/N,KAAKsB,WAAW0M,EAAAA;EAClD;AAAA;",
  "names": ["classify", "text", "fallback", "String", "toLowerCase", "replace", "getCurrentUrl", "hash", "location", "pathname", "search", "createHistoryRecord", "url", "customData", "data", "_extends", "random", "Math", "source", "history", "pushState", "updateHistoryRecord", "state", "replaceState", "delegateEvent", "selector", "type", "callback", "options", "o", "delegate", "destroy", "controller", "abort", "query", "context", "document", "querySelector", "queryAll", "Array", "from", "querySelectorAll", "nextTick", "requestAnimationFrame", "escapeCssIdentifier", "ident", "window", "CSS", "escape", "toMs", "s", "Number", "slice", "getDataFromHtml", "html", "containers", "_query", "_query2", "fakeDom", "createElement", "innerHTML", "blocks", "forEach", "console", "warn", "length", "item", "index", "setAttribute", "push", "outerHTML", "r", "innerText", "c", "className", "title", "pageClass", "originalContent", "fetch", "defaults", "method", "headers", "request", "XMLHttpRequest", "onreadystatechange", "readyState", "open", "Object", "entries", "key", "header", "setRequestHeader", "send", "Location", "URL", "constructor", "base", "baseURI", "super", "toString", "this", "static", "el", "href", "getAttribute", "markSwupElements", "element", "isSwupClass", "test", "includes", "cleanupAnimationClasses", "removeClasses", "documentElement", "split", "filter", "classList", "remove", "Cache", "swup", "pages", "last", "getCacheUrl", "resolveUrl", "fromUrl", "cacheUrl", "page", "responseURL", "log", "keys", "getPage", "getCurrentPage", "exists", "empty", "enterPage", "event", "skipTransition", "triggerEvent", "Promise", "resolve", "animationPromises", "getAnimationPromises", "all", "then", "getAnchorElement", "charAt", "substring", "decoded", "decodeURIComponent", "getElementById", "transitionProp", "transitionEndEvent", "animationProp", "animationEndEvent", "animationType", "e", "animationSelector", "animatedElements", "body", "map", "timeout", "propCount", "getTransitionInfo", "expectedType", "styles", "getComputedStyle", "transitionDuration", "animationDelay", "transitionDelays", "transitionDurations", "transitionTimeout", "calculateTimeout", "animationDurations", "animationDuration", "animationTimeout", "animationDelays", "p", "g", "max", "performance", "now", "a", "l", "removeEventListener", "endEvent", "onEnd", "target", "Error", "startTime", "elapsedTime", "propsTransitioned", "end", "setTimeout", "addEventListener", "Boolean", "delays", "durations", "concat", "duration", "i", "ontransitionend", "onwebkittransitionend", "onanimationend", "onwebkitanimationend", "getPageData", "pageHtmlData", "responseText", "fetchPage", "requestHeaders", "cache", "reject", "response", "status", "n", "cacheablePageData", "leavePage", "isHistoryVisit", "PopStateEvent", "add", "shouldIgnoreVisit", "performPageLoad", "customTransition", "historyAction", "shouldSkipTransition", "updateTransition", "fetchPromise", "t", "scrollToElement", "historyUrl", "currentPageUrl", "pageData", "renderPage", "catch", "errorUrl", "skipPopStateHandling", "go", "replaceContent", "handler", "eventHandlers", "_handlers", "off", "h", "eventName", "originalEvent", "error", "CustomEvent", "detail", "dispatchEvent", "use", "plugin", "maybeInvalidPlugin", "isSwupPlugin", "_checkRequirements", "_beforeMount", "mount", "plugins", "unuse", "pluginOrName", "findPlugin", "unmount", "_afterUnmount", "find", "name", "isSameResolvedUrl", "to", "custom", "transition", "animateHistoryBrowsing", "Swup", "version", "animationInDone", "animationInStart", "animationOutDone", "animationOutStart", "animationSkipped", "clickLink", "contentReplaced", "disabled", "enabled", "openPageInNewTab", "pageLoaded", "pageRetrievedFromCache", "pageView", "popState", "samePage", "samePageWithHash", "serverError", "transitionStart", "transitionEnd", "willReplaceContent", "delegatedListeners", "boundPopStateHandler", "loadPage", "on", "ignoreVisit", "closest", "linkSelector", "Accept", "_event$state", "popStateHandler", "bind", "enable", "click", "linkClickHandler", "removeAttribute", "origin", "triggerWillOpenNewWindow", "linkEl", "delegateTarget", "fromElement", "metaKey", "ctrlKey", "shiftKey", "altKey", "button", "preventDefault", "handleLinkToSamePage", "historyAttr", "triggerEl", "matches", "_event$state$url", "_event$state2", "result", "startsWith", "url1", "url2"]
}
